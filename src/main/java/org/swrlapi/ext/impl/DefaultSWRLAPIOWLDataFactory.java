package org.swrlapi.ext.impl;

import java.util.List;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLAnnotationProperty;
import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLDataProperty;
import org.semanticweb.owlapi.model.OWLDatatype;
import org.semanticweb.owlapi.model.OWLDeclarationAxiom;
import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLObjectProperty;
import org.swrlapi.core.OWLIRIResolver;
import org.swrlapi.core.arguments.SWRLBuiltInArgument;
import org.swrlapi.core.arguments.SWRLBuiltInArgumentFactory;
import org.swrlapi.core.arguments.impl.DefaultSWRLBuiltInArgumentFactoryImpl;
import org.swrlapi.ext.OWLDatatypeFactory;
import org.swrlapi.ext.OWLLiteralFactory;
import org.swrlapi.ext.SWRLAPIBuiltInAtom;
import org.swrlapi.ext.SWRLAPILiteralFactory;
import org.swrlapi.ext.SWRLAPIOWLDataFactory;
import org.swrlapi.ext.SWRLAPIRule;
import org.swrlapi.sqwrl.values.SQWRLResultValueFactory;
import org.swrlapi.sqwrl.values.impl.DefaultSQWRLResultValueFactory;

import uk.ac.manchester.cs.owl.owlapi.OWLDataFactoryImpl;

public class DefaultSWRLAPIOWLDataFactory extends OWLDataFactoryImpl implements SWRLAPIOWLDataFactory
{
	private static final long serialVersionUID = 1L;

	private final OWLIRIResolver owlIRIResolver;
	private final OWLDatatypeFactory owlDatatypeFactory;
	private final OWLLiteralFactory owlLiteralFactory;
	private final SWRLAPILiteralFactory swrlAPILiteralFactory;
	private final SWRLBuiltInArgumentFactory swrlBuiltInArgumentFactory;
	private final SQWRLResultValueFactory sqwrlResultValueFactory;

	public DefaultSWRLAPIOWLDataFactory(OWLIRIResolver owlIRIResolver)
	{
		this.owlIRIResolver = owlIRIResolver;
		this.owlDatatypeFactory = new DefaultOWLDatatypeFactory();
		this.owlLiteralFactory = new DefaultOWLLiteralFactory(this.owlDatatypeFactory);
		this.swrlAPILiteralFactory = new DefaultSWRLAPILiteralFactory(this.owlLiteralFactory);
		this.swrlBuiltInArgumentFactory = new DefaultSWRLBuiltInArgumentFactoryImpl(this.owlIRIResolver,
				this.owlLiteralFactory);
		this.sqwrlResultValueFactory = new DefaultSQWRLResultValueFactory(this.owlIRIResolver, this.owlLiteralFactory);
	}

	@Override
	public SWRLBuiltInArgumentFactory getSWRLBuiltInArgumentFactory()
	{
		return this.swrlBuiltInArgumentFactory;
	}

	@Override
	public SWRLAPIBuiltInAtom getSWRLAPIBuiltInAtom(String ruleName, IRI builtInIRI, String builtInShortName,
			List<SWRLBuiltInArgument> arguments)
	{
		return new DefaultSWRLAPIBuiltInAtom(ruleName, builtInIRI, builtInShortName, arguments);
	}

	@Override
	public OWLClass getOWLClass()
	{
		throw new RuntimeException("getOWLClass not implemented");
		// OWLOntologyManagerImpl.html#getNextAutoGeneratedIRI()
	}

	@Override
	public OWLNamedIndividual getOWLNamedIndividual()
	{
		throw new RuntimeException("getOWLNamedIndividual not implemented");
		// OWLOntologyManagerImpl.html#getNextAutoGeneratedIRI()
	}

	@Override
	public SWRLAPIRule getSWRLRule(String ruleName, String ruleText)
	{
		throw new RuntimeException("SWRL parser not implemented");
	}

	@Override
	public SQWRLResultValueFactory getSQWRLResultValueFactory()
	{
		return this.sqwrlResultValueFactory;
	}

	@Override
	public OWLDeclarationAxiom getOWLClassDeclarationAxiom(OWLClass cls)
	{
		return getOWLDeclarationAxiom(cls);
	}

	@Override
	public OWLDeclarationAxiom getOWLIndividualDeclarationAxiom(OWLNamedIndividual individual)
	{
		return getOWLDeclarationAxiom(individual);
	}

	@Override
	public OWLDeclarationAxiom getOWLObjectPropertyDeclarationAxiom(OWLObjectProperty property)
	{
		return getOWLDeclarationAxiom(property);
	}

	@Override
	public OWLDeclarationAxiom getOWLDataPropertyDeclarationAxiom(OWLDataProperty property)
	{
		return getOWLDeclarationAxiom(property);
	}

	@Override
	public OWLDeclarationAxiom getOWLAnnotationPropertyDeclarationAxiom(OWLAnnotationProperty property)
	{
		return getOWLDeclarationAxiom(property);
	}

	@Override
	public OWLDeclarationAxiom getOWLDatatypeDeclarationAxiom(OWLDatatype datatype)
	{
		return getOWLDeclarationAxiom(datatype);
	}

	@Override
	public OWLDatatypeFactory getOWLDatatypeFactory()
	{
		return this.owlDatatypeFactory;
	}

	@Override
	public OWLLiteralFactory getOWLLiteralFactory()
	{
		return this.owlLiteralFactory;
	}

	@Override
	public SWRLAPILiteralFactory getSWRLAPILiteralFactory()
	{
		return this.swrlAPILiteralFactory;
	}

	@Override
	public OWLIRIResolver getOWLIRIResolver()
	{
		return this.owlIRIResolver;
	}

}
